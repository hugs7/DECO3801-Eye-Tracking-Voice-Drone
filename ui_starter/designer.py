# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from windows import Window
from signals import Signals


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(626, 516)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.droneFeed = QtWidgets.QLabel(parent=self.centralwidget)
        self.droneFeed.setGeometry(QtCore.QRect(0, 0, 621, 491))
        self.droneFeed.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.droneFeed.setObjectName("droneFeed")
        self.videoFeed = QtWidgets.QLabel(parent=self.centralwidget)
        self.videoFeed.setGeometry(QtCore.QRect(250, 370, 131, 81))
        self.videoFeed.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.videoFeed.setWordWrap(True)
        self.videoFeed.setObjectName("videoFeed")
        self.recentCommand = QtWidgets.QLabel(parent=self.centralwidget)
        self.recentCommand.setGeometry(QtCore.QRect(180, 10, 261, 31))
        self.recentCommand.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.recentCommand.setWordWrap(True)
        self.recentCommand.setObjectName("recentCommand")
        self.progressBar = QtWidgets.QProgressBar(parent=self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(250, 200, 141, 31))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 626, 18))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(parent=self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew = QtGui.QAction(parent=MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionOptions = QtGui.QAction(parent=MainWindow)
        self.actionOptions.setObjectName("actionOptions")
        self.actionQuit = QtGui.QAction(parent=MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAbout = QtGui.QAction(parent=MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.menuFile.addAction(self.actionOptions)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuFile.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #Options bar event handling
        self.actionAbout.triggered.connect(self.aboutWindow)
        self.actionOptions.triggered.connect(self.optionsWindow)
        
        #Event handling from anywhere/anytime
        self.signals = Signals()
        #updateRecentCommand of this class is called when updateCommand event triggered
        self.signals.updateCommand.connect(self.updateRecentCommand) 


    def aboutWindow(self):
        """
        Some references
        https://stackoverflow.com/questions/1807299/open-a-second-window-in-pyqt
        https://pythonpyqt.com/pyqt-events/#:~:text=You%20can%20use%20any%20key,event%20that%20quits%20the%20program.&text=In%20our%20example%2C%20we%20reimplement%20the%20keyPressEvent()%20event%20handler.&text=If%20we%20press%20the%20Esc,the%20keyboard%2C%20the%20application%20terminates.
        """
        dialog = QtWidgets.QDialog()
        dialog.ui = Window()
        dialog.ui.setupUi(dialog, "About text")

        self.signals.updateCommand.emit("Hello") #updateCommand event is triggered

        dialog.exec()
        
    def optionsWindow(self):
        dialog = QtWidgets.QDialog()
        dialog.ui = Window()
        dialog.ui.setupUi(dialog, "Options text")
        dialog.exec()
    
    def updateRecentCommand(self, newCommand):
        self.recentCommand.setText(newCommand)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.droneFeed.setText(_translate("MainWindow", "Main drone feed"))
        self.videoFeed.setText(_translate("MainWindow", "Video feed"))
        self.recentCommand.setText(_translate("MainWindow", "Recent command"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionNew.setText(_translate("MainWindow", "New "))
        self.actionOptions.setText(_translate("MainWindow", "Options"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionAbout.setText(_translate("MainWindow", "About"))

    